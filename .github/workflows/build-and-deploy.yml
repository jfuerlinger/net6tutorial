name: build-and-deploy

on:
  workflow_dispatch:
  
  push:
    paths:
      - 'Catalog.Api/**'
    branches: [ main ]
        
  pull_request:
    paths:
      - 'Catalog.Api/**'
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:

  build-and-deploy:

    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}


    - name: 'Build and push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build ./Catalog.Api --file ./Catalog.Api/Dockerfile --tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/catalog:latest
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/catalog:latest
        
  sonarcloud:
  
    name: analyse-source
    runs-on: ubuntu-latest
    
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - uses: actions/checkout@v2      

      - name: Setup .NET 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
          
      - name: Setup .NET 6.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true          

      - name: SonarCloud Scan
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"jfuerlinger_net6tutorial" /o:"github-jfuerlinger" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="${{github.workspace}}/coverage.opencover.xml" /d:sonar.coverage.exclusions="**Tests*.cs"
          dotnet restore
          dotnet build 
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput='${{github.workspace}}/coverage.opencover.xml' 
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"          
        
